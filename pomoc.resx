<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>